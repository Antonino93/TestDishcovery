{"remainingRequest":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SVILUPPO\\test\\frontend-vue\\src\\components\\CommentDisplay.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\SVILUPPO\\test\\frontend-vue\\src\\components\\CommentDisplay.vue","mtime":1654014379713},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7DQoNCmltcG9ydCB7IElDb21tZW50IH0gZnJvbSAiQC9zZXJ2aWNlcy9yZWFsV29ybGRBcGkvbW9kZWxzIjsNCmltcG9ydCBBcnRpY2xlIGZyb20gIkAvc3RvcmUvbW9kdWxlcy9BcnRpY2xlIjsNCmltcG9ydCBVc2VyIGZyb20gIkAvc3RvcmUvbW9kdWxlcy9Vc2VyIjsNCmltcG9ydCBEYXRlVXRpbHMgZnJvbSAiQC91dGlscy9EYXRlVXRpbHMiOw0KDQpAQ29tcG9uZW50DQpleHBvcnQgZGVmYXVsdCBjbGFzcyBDb21tZW50RGlzcGxheSBleHRlbmRzIFZ1ZSB7DQogIEBQcm9wKHsgcmVxdWlyZWQ6IHRydWUgfSkgY29tbWVudCE6IElDb21tZW50Ow0KICBAUHJvcCh7IHJlcXVpcmVkOiB0cnVlIH0pIHNsdWchOiBzdHJpbmc7DQoNCiAgaXNMb2FkaW5nID0gZmFsc2U7DQoNCiAgZ2V0IGNvbW1lbnREYXRlKCk6IHN0cmluZyB7DQogICAgcmV0dXJuIERhdGVVdGlscy55ZWFyTW9udGhEYXlXZWVrZGF5Rm9ybWF0KHRoaXMuY29tbWVudC5jcmVhdGVkQXQpOw0KICB9DQoNCiAgZ2V0IGlzTXlDb21tZW50KCk6IGJvb2xlYW4gew0KICAgIHJldHVybiBVc2VyLmN1cnJlbnRVc2VyPy51c2VybmFtZSA9PT0gdGhpcy5jb21tZW50LmF1dGhvci51c2VybmFtZTsNCiAgfQ0KDQogIGFzeW5jIGRlbGV0ZUNvbW1lbnQoKTogUHJvbWlzZTx2b2lkPiB7DQogICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOw0KICAgIHRyeSB7DQogICAgICBhd2FpdCBBcnRpY2xlLmRlbGV0ZUNvbW1lbnQoew0KICAgICAgICBzbHVnOiB0aGlzLnNsdWcsDQogICAgICAgIGNvbW1lbnRJZDogdGhpcy5jb21tZW50LmlkDQogICAgICB9KTsNCiAgICAgIHRoaXMuJGVtaXQoImNvbW1lbnQtZGVsZXRlZCIpOw0KICAgIH0gZmluYWxseSB7DQogICAgICB0aGlzLmlzTG9hZGluZyA9IGZhbHNlOw0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["CommentDisplay.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CommentDisplay.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-block\">\r\n      <p class=\"card-text\">\r\n        {{ comment.body }}\r\n      </p>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n      <a href=\"\" class=\"comment-author\">\r\n        <img :src=\"comment.author.image\" class=\"comment-author-img\" />\r\n      </a>\r\n      &nbsp;\r\n      <router-link\r\n        :to=\"{\r\n          name: $routesNames.profileIndex,\r\n          params: { username: comment.author.username }\r\n        }\"\r\n        class=\"comment-author\"\r\n      >\r\n        {{ comment.author.username }}\r\n      </router-link>\r\n      <span class=\"date-posted\">{{ commentDate }}</span>\r\n      <span class=\"mod-options\">\r\n        <i class=\"ion-trash-a\" :disabled=\"isLoading\" @click=\"deleteComment\"></i>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\r\n\r\nimport { IComment } from \"@/services/realWorldApi/models\";\r\nimport Article from \"@/store/modules/Article\";\r\nimport User from \"@/store/modules/User\";\r\nimport DateUtils from \"@/utils/DateUtils\";\r\n\r\n@Component\r\nexport default class CommentDisplay extends Vue {\r\n  @Prop({ required: true }) comment!: IComment;\r\n  @Prop({ required: true }) slug!: string;\r\n\r\n  isLoading = false;\r\n\r\n  get commentDate(): string {\r\n    return DateUtils.yearMonthDayWeekdayFormat(this.comment.createdAt);\r\n  }\r\n\r\n  get isMyComment(): boolean {\r\n    return User.currentUser?.username === this.comment.author.username;\r\n  }\r\n\r\n  async deleteComment(): Promise<void> {\r\n    this.isLoading = true;\r\n    try {\r\n      await Article.deleteComment({\r\n        slug: this.slug,\r\n        commentId: this.comment.id\r\n      });\r\n      this.$emit(\"comment-deleted\");\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}