{"remainingRequest":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js??ref--14-3!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\SVILUPPO\\test\\frontend-vue\\src\\store\\modules\\User.ts","dependencies":[{"path":"C:\\SVILUPPO\\test\\frontend-vue\\src\\store\\modules\\User.ts","mtime":1654014379730},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\SVILUPPO\\test\\frontend-vue\\src\\store\\modules\\User.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Action,\r\n  getModule,\r\n  Module,\r\n  Mutation,\r\n  VuexModule\r\n} from \"vuex-module-decorators\";\r\n\r\nimport {\r\n  IUser,\r\n  IUserLoginRequestParams,\r\n  IUserRegisterRequestParams,\r\n  IUserUpdateRequestParams\r\n} from \"@/services/realWorldApi/models\";\r\nimport {\r\n  UserGetCurrent,\r\n  UserLogin,\r\n  UserRegister,\r\n  UserUpdate\r\n} from \"@/services/realWorldApi/RealWorldApiUser\";\r\nimport LocalStorageUtils from \"@/utils/LocalStorageUtils\";\r\n\r\nimport store from \"../index\";\r\nimport { ICurrentUser, IUserState } from \"../models\";\r\nimport modulesNames from \"../modulesNames\";\r\nimport { TransformICurrentUserToIUser } from \"../transformers/IUserTransformers\";\r\n\r\nconst AUTH_TOKEN_KEY = \"realWorldAuthToken\";\r\n\r\n@Module({ dynamic: true, namespaced: true, store, name: modulesNames.user })\r\nclass User extends VuexModule implements IUserState {\r\n  private _currentUser?: ICurrentUser | null = null;\r\n  private _authToken?: string = LocalStorageUtils.getItem(AUTH_TOKEN_KEY);\r\n\r\n  get currentUser(): ICurrentUser | undefined | null {\r\n    return this._currentUser;\r\n  }\r\n\r\n  get authToken(): string {\r\n    return this._authToken || \"\";\r\n  }\r\n\r\n  get isLoggedIn(): boolean {\r\n    return !!this._currentUser;\r\n  }\r\n\r\n  @Mutation\r\n  private SET_CURRENT_USER(currentUser?: ICurrentUser): void {\r\n    this._currentUser = currentUser;\r\n  }\r\n\r\n  @Mutation\r\n  private SET_AUTH_TOKEN(authToken?: string): void {\r\n    if (authToken) {\r\n      this._authToken = authToken;\r\n      LocalStorageUtils.setItem(AUTH_TOKEN_KEY, authToken);\r\n    } else {\r\n      this._authToken = undefined;\r\n      LocalStorageUtils.removeItem(AUTH_TOKEN_KEY);\r\n    }\r\n  }\r\n\r\n  @Action({ rawError: true })\r\n  private setFromIUser(user: IUser): void {\r\n    this.SET_CURRENT_USER(TransformICurrentUserToIUser(user));\r\n    this.SET_AUTH_TOKEN(user.token);\r\n  }\r\n\r\n  @Action({ rawError: true })\r\n  async fetchCurrentUser(): Promise<void> {\r\n    const res = await UserGetCurrent();\r\n    this.setFromIUser(res);\r\n  }\r\n\r\n  @Action({ rawError: true })\r\n  async login(params: IUserLoginRequestParams): Promise<void> {\r\n    const res = await UserLogin(params);\r\n    this.setFromIUser(res);\r\n  }\r\n\r\n  @Action({ rawError: true })\r\n  async register(params: IUserRegisterRequestParams): Promise<void> {\r\n    const res = await UserRegister(params);\r\n    this.setFromIUser(res);\r\n  }\r\n\r\n  @Action({ rawError: true })\r\n  async update(params: IUserUpdateRequestParams): Promise<void> {\r\n    const res = await UserUpdate(params);\r\n    this.setFromIUser(res);\r\n  }\r\n\r\n  @Action({ rawError: true })\r\n  logout(): void {\r\n    this.SET_AUTH_TOKEN(undefined);\r\n    this.SET_CURRENT_USER(undefined);\r\n  }\r\n\r\n  @Action({ rawError: true })\r\n  async completeAuth(): Promise<void> {\r\n    if (this.authToken && !this.isLoggedIn) {\r\n      await this.fetchCurrentUser();\r\n    }\r\n  }\r\n}\r\n\r\nexport default getModule(User);\r\n"],"sourceRoot":""}]}