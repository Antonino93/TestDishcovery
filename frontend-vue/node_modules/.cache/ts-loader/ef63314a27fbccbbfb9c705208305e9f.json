{"remainingRequest":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\SVILUPPO\\test\\frontend-vue\\src\\services\\realWorldApi\\RealWorldApiUser.ts","dependencies":[{"path":"C:\\SVILUPPO\\test\\frontend-vue\\src\\services\\realWorldApi\\RealWorldApiUser.ts","mtime":1654451425793},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1NWSUxVUFBPL3Rlc3QvZnJvbnRlbmQtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgUmVhbFdvcmxkQXBpSW5zdGFuY2UgZnJvbSAiLi9SZWFsV29ybGRBcGlCYXNlIjsKdmFyIFVTRVJfUEFUSCA9ICIvdXNlciI7CnZhciBVU0VSU19QQVRIID0gIi91c2VycyI7CmV4cG9ydCB2YXIgVXNlckxvZ2luID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShwYXJhbXMpIHsKICAgIHZhciBfcmVzJGRhdGE7CgogICAgdmFyIHJlczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBSZWFsV29ybGRBcGlJbnN0YW5jZS5wb3N0KCIiLmNvbmNhdChVU0VSU19QQVRILCAiL2xvZ2luIiksIHsKICAgICAgICAgICAgICB1c2VyOiBwYXJhbXMKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXMgPT09IG51bGwgfHwgcmVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3JlcyRkYXRhID0gcmVzLmRhdGEpID09PSBudWxsIHx8IF9yZXMkZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3JlcyRkYXRhLnVzZXIpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBVc2VyTG9naW4oX3gpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIFVzZXJSZWdpc3RlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihwYXJhbXMpIHsKICAgIHZhciBfcmVzJGRhdGEyOwoKICAgIHZhciByZXM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBSZWFsV29ybGRBcGlJbnN0YW5jZS5wb3N0KFVTRVJTX1BBVEgsIHsKICAgICAgICAgICAgICB1c2VyOiBwYXJhbXMKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlcyA9PT0gbnVsbCB8fCByZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfcmVzJGRhdGEyID0gcmVzLmRhdGEpID09PSBudWxsIHx8IF9yZXMkZGF0YTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXMkZGF0YTIudXNlcik7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gVXNlclJlZ2lzdGVyKF94MikgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIFVzZXJHZXRDdXJyZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgdmFyIF9yZXMkZGF0YTM7CgogICAgdmFyIHJlczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIFJlYWxXb3JsZEFwaUluc3RhbmNlLmdldChVU0VSX1BBVEgpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXMgPT09IG51bGwgfHwgcmVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3JlcyRkYXRhMyA9IHJlcy5kYXRhKSA9PT0gbnVsbCB8fCBfcmVzJGRhdGEzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVzJGRhdGEzLnVzZXIpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIFVzZXJHZXRDdXJyZW50KCkgewogICAgcmV0dXJuIF9yZWYzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIFVzZXJVcGRhdGUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmNCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQocGFyYW1zKSB7CiAgICB2YXIgX3JlcyRkYXRhNDsKCiAgICB2YXIgcmVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gUmVhbFdvcmxkQXBpSW5zdGFuY2UucG9zdChVU0VSX1BBVEgsIHsKICAgICAgICAgICAgICB1c2VyOiBwYXJhbXMKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnbXVsdGlwYXJ0L2Zvcm0tZGF0YScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuYWJydXB0KCJyZXR1cm4iLCByZXMgPT09IG51bGwgfHwgcmVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3JlcyRkYXRhNCA9IHJlcy5kYXRhKSA9PT0gbnVsbCB8fCBfcmVzJGRhdGE0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVzJGRhdGE0LnVzZXIpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIFVzZXJVcGRhdGUoX3gzKSB7CiAgICByZXR1cm4gX3JlZjQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7"},{"version":3,"sources":["C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\SVILUPPO\\test\\frontend-vue\\src\\services\\realWorldApi\\RealWorldApiUser.ts"],"names":[],"mappings":";;AAMA,OAAO,oBAAP,MAAiC,oBAAjC;AAEA,IAAM,SAAS,GAAG,OAAlB;AACA,IAAM,UAAU,GAAG,QAAnB;AAEA,OAAO,IAAM,SAAS;AAAA,qEAAG,iBACvB,MADuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGL,oBAAoB,CAAC,IAArB,WAA6B,UAA7B,aAAiD;AACjE,cAAA,IAAI,EAAE;AAD2D,aAAjD,CAHK;;AAAA;AAGjB,YAAA,GAHiB;AAAA,6CAMhB,GANgB,aAMhB,GANgB,oCAMhB,GAAG,CAAE,IANW,8CAMhB,UAAW,IANK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAT,SAAS;AAAA;AAAA;AAAA,GAAf;AASP,OAAO,IAAM,YAAY;AAAA,sEAAG,kBAC1B,MAD0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGR,oBAAoB,CAAC,IAArB,CAA0B,UAA1B,EAAsC;AAAE,cAAA,IAAI,EAAE;AAAR,aAAtC,CAHQ;;AAAA;AAGpB,YAAA,GAHoB;AAAA,8CAInB,GAJmB,aAInB,GAJmB,qCAInB,GAAG,CAAE,IAJc,+CAInB,WAAW,IAJQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZ,YAAY;AAAA;AAAA;AAAA,GAAlB;AAOP,OAAO,IAAM,cAAc;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACV,oBAAoB,CAAC,GAArB,CAAyB,SAAzB,CADU;;AAAA;AACtB,YAAA,GADsB;AAAA,8CAErB,GAFqB,aAErB,GAFqB,qCAErB,GAAG,CAAE,IAFgB,+CAErB,WAAW,IAFU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAd,cAAc;AAAA;AAAA;AAAA,GAApB;AAKP,OAAO,IAAM,UAAU;AAAA,sEAAG,kBACxB,MADwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGN,oBAAoB,CAAC,IAArB,CAA0B,SAA1B,EAAqC;AAAE,cAAA,IAAI,EAAE;AAAR,aAArC,EAAuD;AACvE,cAAA,OAAO,EAAE;AACL,gCAAgB;AADX;AAD8D,aAAvD,CAHM;;AAAA;AAGlB,YAAA,GAHkB;AAAA,8CAQjB,GARiB,aAQjB,GARiB,qCAQjB,GAAG,CAAE,IARY,+CAQjB,WAAW,IARM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAV,UAAU;AAAA;AAAA;AAAA,GAAhB","sourcesContent":["import {\r\n  IUser,\r\n  IUserLoginRequestParams,\r\n  IUserRegisterRequestParams,\r\n  IUserUpdateRequestParams\r\n} from \"./models\";\r\nimport RealWorldApiInstance from \"./RealWorldApiBase\";\r\n\r\nconst USER_PATH = \"/user\";\r\nconst USERS_PATH = \"/users\";\r\n\r\nexport const UserLogin = async (\r\n  params: IUserLoginRequestParams\r\n): Promise<IUser> => {\r\n  const res = await RealWorldApiInstance.post(`${USERS_PATH}/login`, {\r\n    user: params\r\n  });\r\n  return res?.data?.user as IUser;\r\n};\r\n\r\nexport const UserRegister = async (\r\n  params: IUserRegisterRequestParams\r\n): Promise<IUser> => {\r\n  const res = await RealWorldApiInstance.post(USERS_PATH, { user: params });\r\n  return res?.data?.user as IUser;\r\n};\r\n\r\nexport const UserGetCurrent = async (): Promise<IUser> => {\r\n  const res = await RealWorldApiInstance.get(USER_PATH);\r\n  return res?.data?.user as IUser;\r\n};\r\n\r\nexport const UserUpdate = async (\r\n  params: FormData\r\n): Promise<IUser> => {\r\n  const res = await RealWorldApiInstance.post(USER_PATH, { user: params }, {\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n    }\r\n});\r\n  return res?.data?.user as IUser;\r\n};\r\n"],"sourceRoot":""}]}