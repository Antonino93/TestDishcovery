{"remainingRequest":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js??ref--14-2!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SVILUPPO\\test\\frontend-vue\\src\\views\\Home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\SVILUPPO\\test\\frontend-vue\\src\\views\\Home.vue","mtime":1654014379738},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SVILUPPO\\test\\frontend-vue\\src\\views\\Home.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;AA2BA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AAEA,OAAO,UAAP,MAAqC,6BAArC;AACA,OAAO,UAAP,MAAuB,6BAAvB;AACA,OAAO,QAAP,MAAqB,2BAArB;AACA,SACE,sBADF,EAEE,kBAFF,QAGO,+BAHP;AAKA,OAAO,OAAP,MAAoB,yBAApB;AACA,OAAO,IAAP,MAAiB,sBAAjB;AAEA,IAAK,QAAL;;AAAA,CAAA,UAAK,QAAL,EAAa;AACX,EAAA,QAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,QAAA,CAAA,IAAA,CAAA,GAAA,IAAA;AACA,EAAA,QAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACD,CAJD,EAAK,QAAQ,KAAR,QAAQ,GAAA,EAAA,CAAb;;AAaA,IAAqB,IAArB;AAAA;;AAAA;;AAAA,kBAAA;AAAA;;AAAA;;;AACE,UAAA,SAAA,GAA6B,QAA7B;AACA,UAAA,SAAA,GAAY,KAAZ;AACA,UAAA,WAAA,GAAc,kBAAd;AACA,UAAA,YAAA,GAAe,sBAAf;AAEA,UAAA,WAAA,GAAwB,QAAQ,CAAC,EAAjC;AACA,UAAA,UAAA,GAA2B;AAAE,MAAA,QAAQ,EAAE,EAAZ;AAAgB,MAAA,aAAa,EAAE;AAA/B,KAA3B;AACA,UAAA,SAAA,GAA2B,IAA3B;AARF;AAqGC;;AArGD;AAAA;AAAA,SAUE,eAAc;AACZ,aAAO,IAAI,CAAC,UAAZ;AACD;AAZH;AAAA;AAAA,SAcE,eAAQ;AACN,UAAM,GAAG,GAAe,EAAxB;;AAEA,UAAI,KAAK,UAAT,EAAqB;AACnB,QAAA,GAAG,CAAC,IAAJ,CAAS;AACP,UAAA,EAAE,EAAE,QAAQ,CAAC,EADN;AAEP,UAAA,KAAK,EAAE;AAFA,SAAT;AAID;;AAED,MAAA,GAAG,CAAC,IAAJ,CAAS;AACP,QAAA,EAAE,EAAE,QAAQ,CAAC,MADN;AAEP,QAAA,KAAK,EAAE;AAFA,OAAT;;AAKA,UAAI,KAAK,SAAL,IAAkB,KAAK,WAAL,KAAqB,QAAQ,CAAC,GAApD,EAAyD;AACvD,QAAA,GAAG,CAAC,IAAJ,CAAS;AACP,UAAA,EAAE,EAAE,QAAQ,CAAC,GADN;AAEP,UAAA,KAAK,aAAM,KAAK,SAAX;AAFE,SAAT;AAID;;AACD,aAAO,GAAP;AACD;AApCH;AAAA;AAAA;AAAA,6EAsCE;AAAA;AAAA;AAAA;AAAA;AACE,qBAAK,WAAL,GAAmB,KAAK,UAAL,GAAkB,QAAQ,CAAC,EAA3B,GAAgC,QAAQ,CAAC,MAA5D;AADF;AAAA,uBAEQ,KAAK,SAAL,EAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAtCF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFA2CE,kBAAmB,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,+BACU,KADV;AAAA,kDAES,QAAQ,CAAC,EAFlB,wBAGS,QAAQ,CAAC,MAHlB,wBAQS,QAAQ,CAAC,GARlB;AAAA;;AAAA;AAIM,qBAAK,WAAL,GAAmB,KAAnB;AACA,qBAAK,WAAL,GAAmB,kBAAnB;AALN;AAAA,uBAMY,KAAK,SAAL,EANZ;;AAAA;AAAA;;AAAA;AAAA;AAAA,uBASY,KAAK,kBAAL,CAAwB,KAAK,SAAL,IAAkB,EAA1C,CATZ;;AAAA;AAAA;;AAAA;AAAA,sBAaY,IAAI,KAAJ,6BAA+B,KAA/B,EAbZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA3CF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFA4DE,kBAAyB,GAAzB;AAAA;AAAA;AAAA;AAAA;AACE,qBAAK,WAAL,GAAmB,QAAQ,CAAC,GAA5B;AACA,qBAAK,WAAL,GAAmB,kBAAnB;AACA,qBAAK,SAAL,GAAiB,GAAjB;AAHF;AAAA,uBAIQ,KAAK,SAAL,EAJR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OA5DF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFAmEE,kBAAoB,IAApB;AAAA;AAAA;AAAA;AAAA;AACE,qBAAK,WAAL,GAAmB,IAAnB;AADF;AAAA,uBAEQ,KAAK,SAAL,EAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAnEF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAwEE;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,qBAAK,SAAL,GAAiB,IAAjB;AADF;AAGU,gBAAA,UAHV,GAGoC;AAC9B,kBAAA,KAAK,EAAE,KAAK,YADkB;AAE9B,kBAAA,MAAM,EAAE,CAAC,KAAK,WAAL,GAAmB,CAApB,IAAyB,KAAK;AAFR,iBAHpC;AAAA,+BAQY,KAAK,WARjB;AAAA,kDASW,QAAQ,CAAC,MATpB,wBAYW,QAAQ,CAAC,GAZpB,yBAkBW,QAAQ,CAAC,EAlBpB;AAAA;;AAAA;AAAA;AAAA,uBAUgC,OAAO,CAAC,OAAR,mBAAqB,UAArB,EAVhC;;AAAA;AAUQ,qBAAK,UAVb;AAAA;;AAAA;AAAA;AAAA,uBAagC,OAAO,CAAC,OAAR;AACtB,kBAAA,GAAG,EAAE,KAAK;AADY,mBAEnB,UAFmB,EAbhC;;AAAA;AAaQ,qBAAK,UAbb;AAAA;;AAAA;AAAA;AAAA,uBAmBgC,OAAO,CAAC,OAAR,CAAgB,UAAhB,CAnBhC;;AAAA;AAmBQ,qBAAK,UAnBb;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAyBI,qBAAK,SAAL,GAAiB,KAAjB;AACA,gBAAA,MAAM,CAAC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AA1BJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAxEF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAkC,GAAlC,CAAA;;AAAqB,IAAI,GAAA,UAAA,CAAA,CAPxB,SAAS,CAAC;AACT,EAAA,UAAU,EAAE;AACV,IAAA,UAAU,EAAV,UADU;AAEV,IAAA,QAAQ,EAAR,QAFU;AAGV,IAAA,UAAU,EAAV;AAHU;AADH,CAAD,CAOe,CAAA,EAAJ,IAAI,CAAJ;eAAA,I","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\n\r\nimport CommonFeed, { IFeedTab } from \"@/components/CommonFeed.vue\";\r\nimport HomeBanner from \"@/components/HomeBanner.vue\";\r\nimport HomeTags from \"@/components/HomeTags.vue\";\r\nimport IPagination, {\r\n  DEFAULT_ITEMS_PER_PAGE,\r\n  DEFAULT_START_PAGE\r\n} from \"@/services/common/IPagination\";\r\nimport { IArticleList } from \"@/services/realWorldApi/models\";\r\nimport Article from \"@/store/modules/Article\";\r\nimport User from \"@/store/modules/User\";\r\n\r\nenum FeedType {\r\n  Global = \"Global\",\r\n  My = \"My\",\r\n  Tag = \"Tag\"\r\n}\r\n\r\n@Component({\r\n  components: {\r\n    HomeBanner,\r\n    HomeTags,\r\n    CommonFeed\r\n  }\r\n})\r\nexport default class Home extends Vue {\r\n  feedTypes: typeof FeedType = FeedType;\r\n  isLoading = false;\r\n  currentPage = DEFAULT_START_PAGE;\r\n  itemsPerPage = DEFAULT_ITEMS_PER_PAGE;\r\n\r\n  activeTabId: FeedType = FeedType.My;\r\n  activeFeed: IArticleList = { articles: [], articlesCount: 0 };\r\n  activeTag: string | null = null;\r\n\r\n  get isLoggedIn(): boolean {\r\n    return User.isLoggedIn;\r\n  }\r\n\r\n  get tabs(): IFeedTab[] {\r\n    const res: IFeedTab[] = [];\r\n\r\n    if (this.isLoggedIn) {\r\n      res.push({\r\n        id: FeedType.My,\r\n        title: \"Your Feed\"\r\n      });\r\n    }\r\n\r\n    res.push({\r\n      id: FeedType.Global,\r\n      title: \"Global Feed\"\r\n    });\r\n\r\n    if (this.activeTag && this.activeTabId === FeedType.Tag) {\r\n      res.push({\r\n        id: FeedType.Tag,\r\n        title: `#${this.activeTag}`\r\n      });\r\n    }\r\n    return res;\r\n  }\r\n\r\n  async mounted(): Promise<void> {\r\n    this.activeTabId = this.isLoggedIn ? FeedType.My : FeedType.Global;\r\n    await this.fetchFeed();\r\n  }\r\n\r\n  async onTabChanged(tabId: FeedType): Promise<void> {\r\n    switch (tabId) {\r\n      case FeedType.My:\r\n      case FeedType.Global:\r\n        this.activeTabId = tabId;\r\n        this.currentPage = DEFAULT_START_PAGE;\r\n        await this.fetchFeed();\r\n        break;\r\n      case FeedType.Tag:\r\n        await this.onTagFeedActivated(this.activeTag || \"\");\r\n        break;\r\n\r\n      default:\r\n        throw new Error(`Unexpected tabId: ${tabId}`);\r\n    }\r\n  }\r\n\r\n  async onTagFeedActivated(tag: string): Promise<void> {\r\n    this.activeTabId = FeedType.Tag;\r\n    this.currentPage = DEFAULT_START_PAGE;\r\n    this.activeTag = tag;\r\n    await this.fetchFeed();\r\n  }\r\n\r\n  async onPageChanged(page: number): Promise<void> {\r\n    this.currentPage = page;\r\n    await this.fetchFeed();\r\n  }\r\n\r\n  async fetchFeed(): Promise<void> {\r\n    this.isLoading = true;\r\n    try {\r\n      const pagination: IPagination = {\r\n        limit: this.itemsPerPage,\r\n        offset: (this.currentPage - 1) * this.itemsPerPage\r\n      };\r\n\r\n      switch (this.activeTabId) {\r\n        case FeedType.Global:\r\n          this.activeFeed = await Article.getList({ ...pagination });\r\n          break;\r\n        case FeedType.Tag:\r\n          this.activeFeed = await Article.getList({\r\n            tag: this.activeTag as string,\r\n            ...pagination\r\n          });\r\n          break;\r\n        case FeedType.My:\r\n          this.activeFeed = await Article.getFeed(pagination);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } finally {\r\n      this.isLoading = false;\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]}