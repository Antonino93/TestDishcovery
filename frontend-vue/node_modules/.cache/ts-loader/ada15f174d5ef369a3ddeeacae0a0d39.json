{"remainingRequest":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\thread-loader\\dist\\cjs.js!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js??ref--14-3!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SVILUPPO\\test\\frontend-vue\\src\\components\\ArticleComments.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\SVILUPPO\\test\\frontend-vue\\src\\components\\ArticleComments.vue","mtime":1654014379706},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1NWSUxVUFBPL3Rlc3QvZnJvbnRlbmQtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJDOi9TVklMVVBQTy90ZXN0L2Zyb250ZW5kLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkM6L1NWSUxVUFBPL3Rlc3QvZnJvbnRlbmQtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiQzovU1ZJTFVQUE8vdGVzdC9mcm9udGVuZC12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICJDOi9TVklMVVBQTy90ZXN0L2Zyb250ZW5kLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC52YWx1ZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgUHJvcCwgVnVlLCBXYXRjaCB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgQ29tbWVudEFkZCBmcm9tICJAL2NvbXBvbmVudHMvQ29tbWVudEFkZC52dWUiOwppbXBvcnQgQ29tbWVudERpc3BsYXkgZnJvbSAiQC9jb21wb25lbnRzL0NvbW1lbnREaXNwbGF5LnZ1ZSI7CmltcG9ydCBDb21tb25Mb2FkZXIgZnJvbSAiQC9jb21wb25lbnRzL0NvbW1vbkxvYWRlci52dWUiOwppbXBvcnQgQXJ0aWNsZSBmcm9tICJAL3N0b3JlL21vZHVsZXMvQXJ0aWNsZSI7Cgp2YXIgQXJ0aWNsZUNvbW1lbnRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKEFydGljbGVDb21tZW50cywgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQXJ0aWNsZUNvbW1lbnRzKTsKCiAgZnVuY3Rpb24gQXJ0aWNsZUNvbW1lbnRzKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBcnRpY2xlQ29tbWVudHMpOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5jb21tZW50cyA9IFtdOwogICAgX3RoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQXJ0aWNsZUNvbW1lbnRzLCBbewogICAga2V5OiAicmVmcmVzaENvbW1lbnRzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWZyZXNoQ29tbWVudHMoKSB7CiAgICAgIHZhciBfT2JqZWN0JHZhbHVlcywKICAgICAgICAgIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgY29tbWVudHMgPSBbXTsKICAgICAgKF9PYmplY3QkdmFsdWVzID0gT2JqZWN0LnZhbHVlcyhBcnRpY2xlLmNvbW1lbnRzQ2FjaGVbdGhpcy5zbHVnXSB8fCBbXSkpID09PSBudWxsIHx8IF9PYmplY3QkdmFsdWVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfT2JqZWN0JHZhbHVlcy5mb3JFYWNoKGZ1bmN0aW9uIChjb21tZW50KSB7CiAgICAgICAgdmFyIF9BcnRpY2xlJGNvbW1lbnRzQ2FjaDsKCiAgICAgICAgaWYgKChfQXJ0aWNsZSRjb21tZW50c0NhY2ggPSBBcnRpY2xlLmNvbW1lbnRzQ2FjaGVbX3RoaXMyLnNsdWddKSAhPT0gbnVsbCAmJiBfQXJ0aWNsZSRjb21tZW50c0NhY2ggIT09IHZvaWQgMCAmJiBfQXJ0aWNsZSRjb21tZW50c0NhY2hbY29tbWVudC5pZF0pIHsKICAgICAgICAgIGNvbW1lbnRzLnB1c2goQXJ0aWNsZS5jb21tZW50c0NhY2hlW190aGlzMi5zbHVnXVtjb21tZW50LmlkXSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgY29tbWVudHMuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBhLmNyZWF0ZWRBdCA+IGIuY3JlYXRlZEF0ID8gMSA6IC0xOwogICAgICB9KTsKICAgICAgdGhpcy5jb21tZW50cyA9IGNvbW1lbnRzOwogICAgfQogIH0sIHsKICAgIGtleTogIm9uU2x1Z0NoYW5nZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX29uU2x1Z0NoYW5nZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShzbHVnKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CgogICAgICAgICAgICAgICAgaWYgKCFzbHVnKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBBcnRpY2xlLmZldGNoQ29tbWVudHMoc2x1Zyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHRoaXMucmVmcmVzaENvbW1lbnRzKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA2OwogICAgICAgICAgICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5maW5pc2goNik7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMSwsIDYsIDldXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIG9uU2x1Z0NoYW5nZShfeCkgewogICAgICAgIHJldHVybiBfb25TbHVnQ2hhbmdlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBvblNsdWdDaGFuZ2U7CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBBcnRpY2xlQ29tbWVudHM7Cn0oVnVlKTsKCl9fZGVjb3JhdGUoW1Byb3AoewogIHJlcXVpcmVkOiB0cnVlCn0pXSwgQXJ0aWNsZUNvbW1lbnRzLnByb3RvdHlwZSwgInNsdWciLCB2b2lkIDApOwoKX19kZWNvcmF0ZShbV2F0Y2goInNsdWciLCB7CiAgaW1tZWRpYXRlOiB0cnVlCn0pXSwgQXJ0aWNsZUNvbW1lbnRzLnByb3RvdHlwZSwgIm9uU2x1Z0NoYW5nZSIsIG51bGwpOwoKQXJ0aWNsZUNvbW1lbnRzID0gX19kZWNvcmF0ZShbQ29tcG9uZW50KHsKICBjb21wb25lbnRzOiB7CiAgICBDb21tb25Mb2FkZXI6IENvbW1vbkxvYWRlciwKICAgIENvbW1lbnRBZGQ6IENvbW1lbnRBZGQsCiAgICBDb21tZW50RGlzcGxheTogQ29tbWVudERpc3BsYXkKICB9Cn0pXSwgQXJ0aWNsZUNvbW1lbnRzKTsKZXhwb3J0IGRlZmF1bHQgQXJ0aWNsZUNvbW1lbnRzOw=="},{"version":3,"sources":["C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\SVILUPPO\\test\\frontend-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SVILUPPO\\test\\frontend-vue\\src\\components\\ArticleComments.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;;;AAiBA,SAAS,SAAT,EAAoB,IAApB,EAA0B,GAA1B,EAA+B,KAA/B,QAA4C,wBAA5C;AAEA,OAAO,UAAP,MAAuB,6BAAvB;AACA,OAAO,cAAP,MAA2B,iCAA3B;AACA,OAAO,YAAP,MAAyB,+BAAzB;AAEA,OAAO,OAAP,MAAoB,yBAApB;;AAGA,IAAqB,eAArB;AAAA;;AAAA;;AAAA,6BAAA;AAAA;;AAAA;;;AAGE,UAAA,QAAA,GAAuB,EAAvB;AACA,UAAA,SAAA,GAAY,KAAZ;AAJF;AA6BC;;AA7BD;AAAA;AAAA,WAME,2BAAe;AAAA;AAAA;;AACb,UAAM,QAAQ,GAAe,EAA7B;AACA,wBAAA,MAAM,CAAC,MAAP,CAAc,OAAO,CAAC,aAAR,CAAsB,KAAK,IAA3B,KAAoC,EAAlD,mEAAuD,OAAvD,CAA+D,UAAA,OAAO,EAAG;AAAA;;AACvE,qCAAI,OAAO,CAAC,aAAR,CAAsB,MAAI,CAAC,IAA3B,CAAJ,kDAAI,sBAAmC,OAAO,CAAC,EAA3C,CAAJ,EAAoD;AAClD,UAAA,QAAQ,CAAC,IAAT,CAAc,OAAO,CAAC,aAAR,CAAsB,MAAI,CAAC,IAA3B,EAAiC,OAAO,CAAC,EAAzC,CAAd;AACD;AACF,OAJD;AAKA,MAAA,QAAQ,CAAC,IAAT,CAAc,UAAC,CAAD,EAAI,CAAJ;AAAA,eAAW,CAAC,CAAC,SAAF,GAAc,CAAC,CAAC,SAAhB,GAA4B,CAA5B,GAAgC,CAAC,CAA5C;AAAA,OAAd;AACA,WAAK,QAAL,GAAgB,QAAhB;AACD;AAfH;AAAA;AAAA;AAAA,kFAkBE,iBAAmB,IAAnB;AAAA;AAAA;AAAA;AAAA;AACE,qBAAK,SAAL,GAAiB,IAAjB;AADF;;AAAA,qBAGQ,IAHR;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIY,OAAO,CAAC,aAAR,CAAsB,IAAtB,CAJZ;;AAAA;AAKM,qBAAK,eAAL;;AALN;AAAA;AAQI,qBAAK,SAAL,GAAiB,KAAjB;AARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAlBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,EAA6C,GAA7C,CAAA;;AAC4B,UAAA,CAAA,CAAzB,IAAI,CAAC;AAAE,EAAA,QAAQ,EAAE;AAAZ,CAAD,CAAqB,CAAA,E,yBAAA,E,MAAA,E,KAAc,CAAd,CAAA;;AAiB1B,UAAA,CAAA,CADC,KAAK,CAAC,MAAD,EAAS;AAAE,EAAA,SAAS,EAAE;AAAb,CAAT,CACN,CAAA,E,yBAAA,E,cAAA,EAUC,IAVD,CAAA;;AAlBmB,eAAe,GAAA,UAAA,CAAA,CADnC,SAAS,CAAC;AAAE,EAAA,UAAU,EAAE;AAAE,IAAA,YAAY,EAAZ,YAAF;AAAgB,IAAA,UAAU,EAAV,UAAhB;AAA4B,IAAA,cAAc,EAAd;AAA5B;AAAd,CAAD,CAC0B,CAAA,EAAf,eAAe,CAAf;eAAA,e","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Prop, Vue, Watch } from \"vue-property-decorator\";\r\n\r\nimport CommentAdd from \"@/components/CommentAdd.vue\";\r\nimport CommentDisplay from \"@/components/CommentDisplay.vue\";\r\nimport CommonLoader from \"@/components/CommonLoader.vue\";\r\nimport { IComment } from \"@/services/realWorldApi/models\";\r\nimport Article from \"@/store/modules/Article\";\r\n\r\n@Component({ components: { CommonLoader, CommentAdd, CommentDisplay } })\r\nexport default class ArticleComments extends Vue {\r\n  @Prop({ required: true }) slug!: string;\r\n\r\n  comments: IComment[] = [];\r\n  isLoading = false;\r\n\r\n  refreshComments(): void {\r\n    const comments: IComment[] = [];\r\n    Object.values(Article.commentsCache[this.slug] || [])?.forEach(comment => {\r\n      if (Article.commentsCache[this.slug]?.[comment.id]) {\r\n        comments.push(Article.commentsCache[this.slug][comment.id]);\r\n      }\r\n    });\r\n    comments.sort((a, b) => (a.createdAt > b.createdAt ? 1 : -1));\r\n    this.comments = comments;\r\n  }\r\n\r\n  @Watch(\"slug\", { immediate: true })\r\n  async onSlugChange(slug: string): Promise<void> {\r\n    this.isLoading = true;\r\n    try {\r\n      if (slug) {\r\n        await Article.fetchComments(slug);\r\n        this.refreshComments();\r\n      }\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]}